/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package paneles;

import Alerts.Information;
import BD.Clientes;
import BD.CortedelDia;
import BD.DetalleVenta;
import BD.Producto;
import BD.Proveedores;
import BD.Usuarios;
import BD.Venta;
import BD.login;
import Conexion.Conexion;
import Controller.CClientes;
import Controller.CCortedia;
import Controller.CDetalle_ventas;
import Controller.CProductos;
import Controller.CUsuarios;
import Controller.CVenta;
import com.sun.jmx.snmp.BerDecoder;
import java.awt.Frame;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Blob;
import java.sql.Date;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import principal.Principal;

import java.awt.GridLayout;
import java.sql.Connection;
import java.util.HashMap;
import java.util.Map;
import javax.swing.*;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.border.Border;
import javax.swing.border.EtchedBorder;
import javax.swing.border.TitledBorder;
import modal.Cortedia;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
/**
 *
 * @author RojeruSan
 */
public class pnlPunto extends javax.swing.JPanel {
    
    Clientes cliente = new Clientes();
    private Connection userConn;
    DefaultComboBoxModel <CClientes> modeloClientes;
    DefaultTableModel modeloTabla = new DefaultTableModel(){
         @Override
        public boolean isCellEditable(int row, int column){
            return false;
        }
    };
    DefaultListModel<CProductos> modeloListaProductos= new DefaultListModel<CProductos>();
    
    Producto producto = new Producto();
    Venta ventas = new Venta();
    DetalleVenta dventa = new DetalleVenta();
    
    
    public pnlPunto() {
        modeloClientes = new DefaultComboBoxModel<CClientes>();
        initComponents();
        cargarColumnasTabla();
        cargarListenerModeloTabla();
        cargarModeloCli();
        txtbuscar.requestFocus();
        
    
       cmbclientes.setSelectedIndex(0);
    
    }
    
        private void cargarModeloCli(){
            ArrayList<CClientes> listaCategorias;
        listaCategorias = cliente.ObtenerUsuarios();
//        modeloClientes.addElement(new CClientes(0, "Seleciona una opcion", "", "", "", "", ""));

        for(CClientes categoria : listaCategorias){
            modeloClientes.addElement(categoria);
            cmbclientes.setSelectedItem("");
            AutoCompleteDecorator.decorate(cmbclientes);
        }
    }

    private void cargarListenerModeloTabla(){
        
        modeloTabla.addTableModelListener(new TableModelListener(){
            @Override
            public void tableChanged(TableModelEvent e) {
             int numFilas = modeloTabla.getRowCount();
             double sumatoria  = 0;
                for (int i = 0; i < numFilas; i++) {
                    String importe = (String) modeloTabla.getValueAt(i, 4);
                    sumatoria += Double.parseDouble(importe);
                }
                lblsumatoria.setText(String.valueOf(sumatoria));
            }
        });
    }
    
    
    
    private void cargarColumnasTabla(){
        modeloTabla.addColumn("Codigo");
        modeloTabla.addColumn("Nombre");
        modeloTabla.addColumn("Precio Venta");
        modeloTabla.addColumn("Cantidad");
        modeloTabla.addColumn("Importe");

    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblventas = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        txtbuscar = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        lblsumatoria = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnventas = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtpago = new javax.swing.JTextField();
        btnquitar = new javax.swing.JToggleButton();
        btncancelar = new javax.swing.JToggleButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        ltproductos = new javax.swing.JList<CProductos>();
        btncorte = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lblimagen = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmbclientes = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        jLabel7.setBackground(new java.awt.Color(204, 204, 204));
        jLabel7.setFont(new java.awt.Font("Roboto", 1, 48)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(204, 204, 204));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img1/point.png"))); // NOI18N
        jLabel7.setText("Punto de Venta");
        add(jLabel7);
        jLabel7.setBounds(0, 0, 1130, 83);

        tblventas.setModel(modeloTabla);
        tblventas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblventasKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblventas);

        add(jScrollPane1);
        jScrollPane1.setBounds(140, 350, 510, 159);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Buscar Producto");
        add(jLabel3);
        jLabel3.setBounds(140, 150, 120, 29);

        txtbuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtbuscarKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtbuscarKeyReleased(evt);
            }
        });
        add(txtbuscar);
        txtbuscar.setBounds(140, 180, 294, 30);

        lblsumatoria.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        lblsumatoria.setText("0.00");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Venta Total:");

        btnventas.setBackground(new java.awt.Color(102, 166, 54));
        btnventas.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnventas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img1/sale.png"))); // NOI18N
        btnventas.setText("Realizar Venta");
        btnventas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnventasActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Pago Con:");

        txtpago.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtpago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpagoActionPerformed(evt);
            }
        });
        txtpago.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtpagoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtpagoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(lblsumatoria, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnventas, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtpago, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblsumatoria)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addGap(8, 8, 8)
                .addComponent(txtpago, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addComponent(btnventas, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        add(jPanel1);
        jPanel1.setBounds(680, 180, 320, 330);

        btnquitar.setBackground(new java.awt.Color(250, 214, 42));
        btnquitar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnquitar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img1/delete.png"))); // NOI18N
        btnquitar.setText("Quitar Producto");
        btnquitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnquitarActionPerformed(evt);
            }
        });
        add(btnquitar);
        btnquitar.setBounds(170, 540, 200, 40);

        btncancelar.setBackground(new java.awt.Color(247, 94, 24));
        btncancelar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btncancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img1/sale-label.png"))); // NOI18N
        btncancelar.setText("Cancelar Venta");
        btncancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancelarActionPerformed(evt);
            }
        });
        add(btncancelar);
        btncancelar.setBounds(380, 540, 210, 40);

        ltproductos.setModel(modeloListaProductos);
        ltproductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ltproductosMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(ltproductos);

        add(jScrollPane2);
        jScrollPane2.setBounds(140, 220, 294, 120);

        btncorte.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btncorte.setMnemonic('c');
        btncorte.setText("Corte del dia");
        btncorte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncorteActionPerformed(evt);
            }
        });
        add(btncorte);
        btncorte.setBounds(680, 110, 310, 40);

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));
        jPanel2.setLayout(null);
        jPanel2.add(lblimagen);
        lblimagen.setBounds(0, 0, 180, 160);

        add(jPanel2);
        jPanel2.setBounds(460, 180, 180, 160);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Cliente :");
        add(jLabel2);
        jLabel2.setBounds(140, 110, 70, 30);

        cmbclientes.setModel(modeloClientes);
        add(cmbclientes);
        cmbclientes.setBounds(200, 110, 300, 30);

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img1/customer_1.png"))); // NOI18N
        jButton1.setText("Nuevo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(520, 110, 120, 30);
    }// </editor-fold>//GEN-END:initComponents

    private void txtpagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpagoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpagoActionPerformed

    private void txtbuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbuscarKeyReleased

      
           limpiarListaProductos();
        String cadenaBusqueda = txtbuscar.getText();
        if(cadenaBusqueda.isEmpty()){
            limpiarListaProductos();
        }
        else{
            try {
                ArrayList<CProductos> listaProductos = producto.obtenerProductosPorCriterio(cadenaBusqueda);
                
                for(CProductos prod:listaProductos){
                    modeloListaProductos.addElement(prod);
                }
            } // TODO add your handling code here:
            catch (SQLException ex) {
                Logger.getLogger(pnlPunto.class.getName()).log(Level.SEVERE, null, ex);
            }
        } 
        
          
    }//GEN-LAST:event_txtbuscarKeyReleased

    private void ltproductosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ltproductosMousePressed
 JList list = (JList)evt.getSource();
        if(evt.getClickCount() == 2){
            int index = list.locationToIndex(evt.getPoint());
            CProductos prod = (CProductos)list.getSelectedValue();
            anadirProductoAVenta(prod);
            
        desplegarFoto(prod);
        limpiarListaProductos();
        txtbuscar.setText("");
        
        }        // TODO add your handling code here:
    }//GEN-LAST:event_ltproductosMousePressed

    private void tblventasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblventasKeyReleased
    if(evt.getKeyCode()==KeyEvent.VK_F2){
            int filaSeleccionada = tblventas.getSelectedRow();
            String cantidad = JOptionPane.showInputDialog("Modificar cantidad:");
          
            if (cantidad != null){
                   if (cantidad.equals("")) {
                
           cantidad = "1";
           
        }else{
        cantidad = cantidad;        
        }
            System.out.println("Code to do something if the user push OK");  
            String precioVenta = (String) modeloTabla.getValueAt(filaSeleccionada, 2);
            double importe = Double.parseDouble(cantidad) * Double.parseDouble(precioVenta);
            String importeString = String.valueOf(importe);
            modeloTabla.setValueAt(cantidad, filaSeleccionada, 3);
            modeloTabla.setValueAt(importeString, filaSeleccionada, 4);
         
            }else{
            
            System.out.println("(Code to do something if the user push Cancel)");

              }
       
           
        }
     if(evt.getKeyCode()==KeyEvent.VK_F3){
             quitarproducto(); 
        }
    }//GEN-LAST:event_tblventasKeyReleased

    private void btnquitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnquitarActionPerformed
        quitarproducto(); 
    }//GEN-LAST:event_btnquitarActionPerformed

    private void btncancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancelarActionPerformed
        int cantidadFilas = modeloTabla.getRowCount();
        
        if (cantidadFilas > 0 ) {
       int opcion =  JOptionPane.showConfirmDialog(this, "¿Esta seguro de cancelar la venta? ");
        
        if (opcion == 0) {   
            for (int i = cantidadFilas-1; i >= 0 ; i--) {
            modeloTabla.removeRow(i);
             txtpago.setText("");
                txtbuscar.setText("");
                lblimagen.setIcon(null);
                limpiarListaProductos();
        }     
        }
       }
    }//GEN-LAST:event_btncancelarActionPerformed

    private void btnventasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnventasActionPerformed
int opcion = cmbclientes.getSelectedIndex();


if(this.tblventas.getRowCount()==0 && this.tblventas.getSelectedRow()==-1){
//JOptionPane.showMessageDialog(null, "NO AGREGO NINGUN PRODUCTO");  
Information info  = new Information(new Frame(), true);
                info.jLabel1.setText("iformacion !!!");
                info.textos.setText("NO AGREGO NINGUN PRODUCTO");
                info.setVisible(true);
}else if (opcion ==-1){
//JOptionPane.showMessageDialog(null, "NO HA SELECCIONADO UN CLIENTE");
Information info  = new Information(new Frame(), true);
                info.jLabel1.setText("iformacion !!!");
                info.textos.setText("NO HA SELECCIONADO UN CLIENTE");
                info.setVisible(true);
}else if (txtpago.getText().equals("")){
//JOptionPane.showMessageDialog(null, "Porfavor agrege la cantidad de pago");
Information info  = new Information(new Frame(), true);
                info.jLabel1.setText("iformacion !!!");
                info.textos.setText("NO AGREGO CANTIDAD DE PAGO");
                info.setVisible(true);
}else{
    
double sumat = Double.parseDouble(lblsumatoria.getText());
double pago = Double.parseDouble(txtpago.getText());
   if(pago < sumat ){
         //  JOptionPane.showMessageDialog(null, "La catidad con la que pago no puede ser menor");
                Information info  = new Information(new Frame(), true);
                info.jLabel1.setText("iformacion !!!");
                info.textos.setText("La catidad con la que pago no puede ser menor");
                info.setVisible(true);
   }else{
    try {  
        guardarventa();
    } catch (JRException ex) {
        Logger.getLogger(pnlPunto.class.getName()).log(Level.SEVERE, null, ex);
    }
txtbuscar.setText("");
limpiarListaProductos(); 
   }

}
    }//GEN-LAST:event_btnventasActionPerformed

    private void btncorteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncorteActionPerformed
        
        new Cortedia(new JFrame(), true).setVisible(true);
        

    }//GEN-LAST:event_btncorteActionPerformed

    private void txtpagoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpagoKeyTyped
   char validar = evt.getKeyChar();
        if(Character.isLetter(validar)){
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Ingresa Solo numeros");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txtpagoKeyTyped

    private void txtpagoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpagoKeyPressed
if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
      int opcion = cmbclientes.getSelectedIndex();
       
    if(this.tblventas.getRowCount()==0 && this.tblventas.getSelectedRow()==-1){
Information info  = new Information(new Frame(), true);
                info.jLabel1.setText("iformacion !!!");
                info.textos.setText("NO AGREGO NINGUN PRODUCTO");
                info.setVisible(true);
}else if (opcion ==-1){
Information info  = new Information(new Frame(), true);
                info.jLabel1.setText("iformacion !!!");
                info.textos.setText("NO HA SELECCIONADO UN CLIENTE");
                info.setVisible(true);
}else if (txtpago.getText().equals("")){
Information info  = new Information(new Frame(), true);
                info.jLabel1.setText("iformacion !!!");
                info.textos.setText("NO AGREGO CANTIDAD DE PAGO");
                info.setVisible(true);

}else{
    
double sumat = Double.parseDouble(lblsumatoria.getText());
double pago = Double.parseDouble(txtpago.getText());
   if(pago < sumat){
            Information info  = new Information(new Frame(), true);
                info.jLabel1.setText("iformacion !!!");
                info.textos.setText("La catidad con la que pago no puede ser menor");
                info.setVisible(true);
 
   }else{
    try {  
        guardarventa();
    } catch (JRException ex) {
        Logger.getLogger(pnlPunto.class.getName()).log(Level.SEVERE, null, ex);
    }
txtbuscar.setText("");
limpiarListaProductos(); 
   }

}
    
    
          }        // TODO add your handling code here:
    }//GEN-LAST:event_txtpagoKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
  JTextField nombre = new JTextField("");
    JTextField telefono = new JTextField("");
    JTextField  email  = new JTextField ("");
    JTextArea direccion = new JTextArea("");
    JPanel panel = new JPanel(new GridLayout(0, 1));
    Border bordejpanel = new TitledBorder(new EtchedBorder(), "Datos Personales");
    
    panel.add(new JLabel("Nombre:"));
    panel.add(nombre);
    panel.add(new JLabel("Telefono:"));
    panel.add(telefono);
    panel.add(new JLabel("email:"));
    panel.add(email);
    panel.add(new JLabel("direccion:"));
    panel.add(direccion);
    
   int result = JOptionPane.showConfirmDialog(null, panel, "Registro de Cliente",
        JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
    if (result == JOptionPane.OK_OPTION) {
        
   
      try {
          CClientes cli = new CClientes(0,nombre.getText(),"","",direccion.getText(),telefono.getText(),email.getText());
          cliente.insert(cli);
          cmbclientes.removeAllItems();
          cargarModeloCli();
      } catch (SQLException ex) {
          Logger.getLogger(pnlPunto.class.getName()).log(Level.SEVERE, null, ex);
      }
       
        
    } else {
        System.out.println("Cancelled");
    }    
           // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtbuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbuscarKeyPressed
 
    }//GEN-LAST:event_txtbuscarKeyPressed
private void desplegarFoto(CProductos prod){
       
   
        try {
            /*obtener imagen*/
            Blob is = producto.buscarFoto(prod);
            byte[]recuperar = is.getBytes(1, (int) is.length());
            BufferedImage img = ImageIO.read(new ByteArrayInputStream(recuperar));
            Image images = img.getScaledInstance(lblimagen.getWidth(), lblimagen.getHeight(), Image.SCALE_SMOOTH);
            lblimagen.setIcon(new ImageIcon(images));
        } catch (SQLException ex) {
            Logger.getLogger(pnlPunto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(pnlPunto.class.getName()).log(Level.SEVERE, null, ex);
        }
                
          
    }
    
    private void limpiarListaProductos(){
        modeloListaProductos.clear();
    }
 
    private void anadirProductoAVenta(CProductos prod){
        String claveProd =Integer.toString(prod.getIdProducto());
        String nombreProd = prod.getNomProducto();
        String precioVenta = String.valueOf(prod.getPrecioVentaProducto());
        String cantidad = "1";
       String importe = String.valueOf(prod.getPrecioVentaProducto());
        
        String [] datosProducto = {claveProd, nombreProd, precioVenta,cantidad,importe};
        modeloTabla.addRow(datosProducto);
    }
    public void guardarventa() throws JRException{
        try {
            ArrayList<CDetalle_ventas> detalles = new ArrayList<CDetalle_ventas>();    
            //Obtenemos la sumatoria de la venta
    
            String sumatoriaStr = lblsumatoria.getText();
            double montoVenta = Double.parseDouble(sumatoriaStr);
            String pagoConStr = txtpago.getText();
            //combobox
            CClientes clien = (CClientes)cmbclientes.getSelectedItem();
            int idcliente =  clien.getIdcliente();
            double cambio = 0;
            if(!pagoConStr.isEmpty()){
                double montoPago = Double.parseDouble(pagoConStr);
                cambio = montoPago - montoVenta;
            }
            //Obtenemos la fecha actual y creamos un objeto Date Sql
            Calendar calendarioLocal = Calendar.getInstance();
            java.util.Date fechaActual = calendarioLocal.getTime();
            long fechaMilisegundos = fechaActual.getTime();
            java.sql.Date fecha = new Date(fechaMilisegundos);
            String idprin=Principal.txtcodigo.getText();
            CVenta venta = new CVenta(idcliente,montoVenta,idprin);
            Long idVenta = ventas.insertarVenta(venta);
            System.out.println("id dela ultima venta: "+idVenta);
            int numRows = modeloTabla.getRowCount();
            
            for (int i = 0; i < numRows; i++) {
                String idProducto = (String) modeloTabla.getValueAt(i, 0);
                String cantidadStr = (String) modeloTabla.getValueAt(i, 3);
                String costoxpStr = (String) modeloTabla.getValueAt(i, 2);
                double cantidad = Double.parseDouble(cantidadStr);
                double costoxp = Double.parseDouble(costoxpStr);
                double costototalx = cantidad * costoxp;
                CDetalle_ventas detalle = new CDetalle_ventas(idVenta, idProducto, cantidad,costototalx);
                dventa.insertarDetalleVenta(detalle);   
                detalles.add(detalle);
              
            }
        userConn=Conexion.getConnection();
       
            for (int i = numRows-1; i >= 0; i--) {
                modeloTabla.removeRow(i);
            }
            lblsumatoria.setText("0.0");
            if(!pagoConStr.isEmpty()){
                JOptionPane.showMessageDialog(this, "<html><h1 style='font-size:200 px; color:blue'>"+cambio+"</h1></html>", "Usted debe dar este cambio:", 1);
                txtpago.setText("");
                txtpago.setText("");
                txtbuscar.setText("");
                lblimagen.setIcon(null);
            }
            reportedeticket(idVenta);
            
            
          
        } catch (SQLException ex) {
            Logger.getLogger(pnlPunto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void quitarproducto(){
       int filaSeleccionada  = tblventas.getSelectedRow();
    int cantidadFilas = modeloTabla.getRowCount();
        if (cantidadFilas > 0 ) {
            
        int opcion = JOptionPane.showConfirmDialog(this, "¿Esta Seguro de borrar el producto?");
        if (opcion == 0) {
            modeloTabla.removeRow(filaSeleccionada);
        }
        }
    }
    
    public void reportedeticket(Long idventa) throws JRException, SQLException{
            userConn=Conexion.getConnection();
            Map parametro = new HashMap();
            parametro.put("idventa",idventa);
            String path = System.getProperty("user.dir")+"/src/reportes/ticket.jasper";
            JasperPrint jprint = JasperFillManager.fillReport(path, parametro,userConn);
            JasperViewer viewer = new JasperViewer(jprint,false);
            viewer.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            viewer.setVisible(true);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btncancelar;
    private javax.swing.JButton btncorte;
    private javax.swing.JToggleButton btnquitar;
    private javax.swing.JButton btnventas;
    private javax.swing.JComboBox cmbclientes;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblimagen;
    private javax.swing.JLabel lblsumatoria;
    private javax.swing.JList<CProductos> ltproductos;
    private javax.swing.JTable tblventas;
    private javax.swing.JTextField txtbuscar;
    private javax.swing.JTextField txtpago;
    // End of variables declaration//GEN-END:variables
}
