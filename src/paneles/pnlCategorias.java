/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package paneles;

import Alerts.Information;
import Alerts.Success;
import Alerts.Warning;
import BD.Categorias;
import Controller.CCategorias;
import java.awt.Frame;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import rojerusan.RSAnimation;

/**
 *
 * @author najera10
 */
public class pnlCategorias extends javax.swing.JInternalFrame {
    private TableRowSorter trsFiltro;
    public  String condicion; 
    
    
    DefaultTableModel modeloTablaCategorias = new DefaultTableModel(){
    public boolean isCellEditable(int filas, int columnas){
            if(columnas==3){
                return true;
            }else{
                return false;
            }
    }
    
    };
    Categorias bdcat = new Categorias();
   public CCategorias   catrgoriaselecionado = null ;
    public pnlCategorias() {
        initComponents();
        CargarColunmas();
        CargarModeloTabla();
      
    }
    
        private  void CargarColunmas(){
        modeloTablaCategorias.addColumn("Nombre");
        modeloTablaCategorias.addColumn("Descripcion");
        modeloTablaCategorias.addColumn("Condicion");
        
    }

        public void CargarModeloTabla(){
      
    limpiarTabla();
       ArrayList<CCategorias>ListarCategorias = bdcat.ObtenerCategorias();
      int numerosProveedpres = ListarCategorias.size();
      modeloTablaCategorias.setNumRows(numerosProveedpres);
        for (int i = 0; i < numerosProveedpres; i++) {
            CCategorias categoria = ListarCategorias.get(i);
            String nombre = categoria.getNombre();
            String descripcion = categoria.getDescripcion();
            int condicion = categoria.getEstado();
            String estado = "";        
            if (condicion == 1){
                        estado = "Activo";
                    }else{
                        estado = "Inactivo";
                    }  
            
            modeloTablaCategorias.setValueAt(categoria, i, 0);
            modeloTablaCategorias.setValueAt(descripcion, i, 1);
            modeloTablaCategorias.setValueAt(estado, i, 2);
            
        }
         
    }
//    public void filtroBusqueda(JTextField txt) {
//        trsFiltro.setRowFilter(RowFilter.regexFilter(txt.getText()));
//    }
//
//   
    public void filtroBusqueda(JTextField txt) {
        trsFiltro.setRowFilter(RowFilter.regexFilter(txt.getText()));
    }
    
    public void limpiar(){
        txtnombre.setText("");
        txtdescripcion.setText("");
         }
        public  void limpiarTabla(){
        int numFilas = modeloTablaCategorias.getRowCount();
        if(numFilas > 0){
            for(int i = numFilas - 1; i >= 0; i--){
                modeloTablaCategorias.removeRow(i);
            }
        }
    }
        
  
        /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaCategorias = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtbuscarcategoria = new javax.swing.JTextField();
        pnlcategorias = new LIB.JPanelRound();
        jLabel1 = new javax.swing.JLabel();
        txtnombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtdescripcion = new javax.swing.JTextArea();
        fSButtonMD1 = new LIB.FSButtonMD();
        fSButtonMD2 = new LIB.FSButtonMD();
        fSButtonMD3 = new LIB.FSButtonMD();

        setPreferredSize(new java.awt.Dimension(900, 429));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(128, 128, 131));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img1/maintenance_1.png"))); // NOI18N
        jLabel7.setText("Categorias");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 460, 100));

        tablaCategorias.setModel(modeloTablaCategorias);
        tablaCategorias.setRowHeight(25);
        tablaCategorias.setRowMargin(0);
        tablaCategorias.setSelectionBackground(new java.awt.Color(102, 153, 255));
        tablaCategorias.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tablaCategorias.getSelectionModel().addListSelectionListener(
            new ListSelectionListener(){
                public void valueChanged(ListSelectionEvent event){
                    if(!event.getValueIsAdjusting() && (tablaCategorias.getSelectedRow()>= 0) ){
                        int filaseleccionada = tablaCategorias.getSelectedRow();
                        CCategorias categoria = (CCategorias) modeloTablaCategorias.getValueAt(filaseleccionada, 0);
                        txtnombre.setText(categoria.getNombre());
                        txtdescripcion.setText(categoria.getDescripcion());

                        catrgoriaselecionado = categoria;

                    }
                }
            }
        );
        jScrollPane1.setViewportView(tablaCategorias);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, 1040, 210));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Listado de Categorias");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 320, 240, 30));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Buscar:");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 320, -1, 30));

        txtbuscarcategoria.setBackground(new java.awt.Color(240, 240, 240));
        txtbuscarcategoria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtbuscarcategoriaKeyTyped(evt);
            }
        });
        jPanel2.add(txtbuscarcategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 320, 200, 30));

        pnlcategorias.setBackground(new java.awt.Color(255, 255, 255));
        pnlcategorias.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 3, true));
        pnlcategorias.setColorPrimario(new java.awt.Color(255, 255, 255));
        pnlcategorias.setColorSecundario(new java.awt.Color(255, 255, 255));
        pnlcategorias.setOpaque(true);
        pnlcategorias.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Nombre *");
        pnlcategorias.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 90, 30));

        txtnombre.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        txtnombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtnombreKeyReleased(evt);
            }
        });
        pnlcategorias.add(txtnombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 260, 30));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Descripcion*");
        pnlcategorias.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        txtdescripcion.setColumns(20);
        txtdescripcion.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        txtdescripcion.setRows(5);
        jScrollPane2.setViewportView(txtdescripcion);

        pnlcategorias.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 270, 110));

        fSButtonMD1.setBackground(new java.awt.Color(102, 166, 54));
        fSButtonMD1.setForeground(new java.awt.Color(0, 0, 0));
        fSButtonMD1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img1/diskette.png"))); // NOI18N
        fSButtonMD1.setMnemonic('g');
        fSButtonMD1.setText("Guardar");
        fSButtonMD1.setToolTipText("");
        fSButtonMD1.setColorHover(new java.awt.Color(204, 255, 102));
        fSButtonMD1.setColorNormal(new java.awt.Color(102, 166, 54));
        fSButtonMD1.setColorPressed(new java.awt.Color(102, 166, 54));
        fSButtonMD1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        fSButtonMD1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fSButtonMD1ActionPerformed(evt);
            }
        });
        pnlcategorias.add(fSButtonMD1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 90, 130, -1));

        fSButtonMD2.setBackground(new java.awt.Color(81, 161, 194));
        fSButtonMD2.setForeground(new java.awt.Color(0, 0, 0));
        fSButtonMD2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img1/brush.png"))); // NOI18N
        fSButtonMD2.setMnemonic('c');
        fSButtonMD2.setText("Limpiar");
        fSButtonMD2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        fSButtonMD2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fSButtonMD2ActionPerformed(evt);
            }
        });
        pnlcategorias.add(fSButtonMD2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 140, 130, -1));

        fSButtonMD3.setBackground(new java.awt.Color(255, 102, 51));
        fSButtonMD3.setForeground(new java.awt.Color(0, 0, 0));
        fSButtonMD3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img1/garbage.png"))); // NOI18N
        fSButtonMD3.setMnemonic('e');
        fSButtonMD3.setText("Eliminar");
        fSButtonMD3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        fSButtonMD3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fSButtonMD3ActionPerformed(evt);
            }
        });
        pnlcategorias.add(fSButtonMD3, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 190, 130, -1));

        jPanel2.add(pnlcategorias, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 20, 460, 280));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtbuscarcategoriaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbuscarcategoriaKeyTyped
        txtbuscarcategoria.addKeyListener(new KeyAdapter() {
            public void keyReleased(final KeyEvent e) {
                String cadena = (txtbuscarcategoria.getText());
                txtbuscarcategoria.setText(cadena);
                repaint();
                filtroBusqueda(txtbuscarcategoria);
            }
        });
        trsFiltro = new TableRowSorter(tablaCategorias.getModel());
        tablaCategorias.setRowSorter(trsFiltro);
    }//GEN-LAST:event_txtbuscarcategoriaKeyTyped

    private void fSButtonMD1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fSButtonMD1ActionPerformed
  try {
            String nombre = txtnombre.getText();
            String descripcion = txtdescripcion.getText();
            
            if (nombre.equals("") || descripcion.equals("")) {
            
                //JOptionPane.showMessageDialog(null, "Verifique los datos");
                Information info  = new Information(new Frame(), true);
                info.jLabel1.setText("Informacion !!!");
                info.textos.setText("Verifique los datos");
                info.setVisible(true);
            
            }else{
                
        int cuentaFilasSeleccionadas = tablaCategorias.getSelectedRowCount();
        if (cuentaFilasSeleccionadas == 1) {
            bdcat.actualizarCategoria(catrgoriaselecionado, nombre, descripcion);
            CargarModeloTabla();
             limpiar();
                Success suc = new Success(new JFrame(),true );
                  suc.titulos.setText("!HECHO¡");
                  suc.textos.setText("SE HAN ACTUALIZADO LOS DATOS");
                 suc.setVisible(true);
            
        }else if(cuentaFilasSeleccionadas == 0){
            CCategorias cate = new CCategorias("0",nombre,descripcion,1);
           int  actulizar =  bdcat.insert(cate);
             CargarModeloTabla();
            limpiar();
           if(actulizar >=1){
                   Success suc = new Success(new JFrame(),true );
                       suc.titulos.setText("!HECHO¡");
                       suc.textos.setText("SE HAN GUARDADO LOS CAMBIOS");
                      suc.setVisible(true);
           } 
         
        
        }
            }
        } catch (SQLException ex) {
            Logger.getLogger(pnlCategorias.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_fSButtonMD1ActionPerformed

    private void fSButtonMD2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fSButtonMD2ActionPerformed
limpiar();
tablaCategorias.clearSelection ();        // TODO add your handling code here:
    }//GEN-LAST:event_fSButtonMD2ActionPerformed

    private void fSButtonMD3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fSButtonMD3ActionPerformed
      try{
        int cuentaFilasSeleccionadas = tablaCategorias.getSelectedRowCount();
            if (cuentaFilasSeleccionadas == 0) {
               // JOptionPane.showMessageDialog(null, "Debe serleccionar alguna fila");
            //new RSNotifyFade("!Alerta!", "Debe serleccionar alguna fila", 7, RSNotifyFade.PositionNotify.TopLef, RSNotifyFade.TypeNotify.WARNING).setVisible(true);
                Information info  = new Information(new Frame(), true);
                info.jLabel1.setText("Informacion !!!");
                info.textos.setText("Debe seleccionar alguna fila");
                info.setVisible(true);
            }else{
              
    
                  Warning warning = new Warning(new Frame(),true);
                warning.jLabel1.setText("Advertencia!!!");
                warning.textos.setText("Esta seguro que deseas eliminar ?");
                warning.setVisible(true);
                     String dato = warning.valor.toString();
                      System.out.println(dato);  
                        if (dato.equals("Aceptar")) {
                bdcat.eliminarCatedoria(catrgoriaselecionado);
                //JOptionPane.showMessageDialog(null, "Categoria  eliminada");
            //new RSNotifyFade("!Alerta!", "Categoria eliminada", 7, RSNotifyFade.PositionNotify.TopLef, RSNotifyFade.TypeNotify.ERROR).setVisible(true);
                limpiar();
                CargarModeloTabla();
          
        }
                 Information info  = new Information(new Frame(), true);
                info.jLabel1.setText("Informacion !!!");
                info.textos.setText("Categoria Eliminada");
                info.setVisible(true);
        }
            
          
        } catch (SQLException ex) {
            Logger.getLogger(pnlUsuarios.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:        // TODO add your handling code here:
    }//GEN-LAST:event_fSButtonMD3ActionPerformed

    private void txtnombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnombreKeyReleased
    txtnombre.setText(txtnombre.getText().toUpperCase());          // TODO add your handling code here:
    }//GEN-LAST:event_txtnombreKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private LIB.FSButtonMD fSButtonMD1;
    private LIB.FSButtonMD fSButtonMD2;
    private LIB.FSButtonMD fSButtonMD3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private LIB.JPanelRound pnlcategorias;
    public static javax.swing.JTable tablaCategorias;
    private javax.swing.JTextField txtbuscarcategoria;
    private javax.swing.JTextArea txtdescripcion;
    private javax.swing.JTextField txtnombre;
    // End of variables declaration//GEN-END:variables
}
